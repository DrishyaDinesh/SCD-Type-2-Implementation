//Creating Input Table which stores details of all the tables for which SCD is to be executed

create or replace table input_table(from_table STRING, trg_table STRING, to_table STRING, hist_col STRING, key STRING, colnames ARRAY); 

insert into input_table select 'employee','employee_trg','employee_final_trg','dept','emp_id',array_construct('name','dept');

insert into input_table select 'customer','customer_trg','cust_final_trg','email','cust_id',array_construct('name','age','gender','email');

select * from input_table;

//Create a Stored Procedure to extract values from the input table and call ext_SCD procedure for all the tables

create or replace procedure SCD_Implementation()
returns STRING
language sql
as
$$
  declare
    c1 cursor for select * from input_table;
    frtable STRING;
    trtable STRING;
    totable STRING;
    hiscol STRING;
    key STRING;
    colnames ARRAY;
    trs_rule STRING;
    trs_col STRING;
  begin
    open c1;
    for record in c1 do
      frtable := record.from_table;
      trtable :=record.trg_table;
      totable := record.to_table;
      hiscol := record.hist_col;
      key := record.key;
      colnames := record.colnames;
      trs_rule := record.trsfrm_rule;
      trs_col := record.trsfrm_res_col;
      call ext_SCD(:frtable,:trtable,:totable,:hiscol,:key,:colnames,:trs_rule,:trs_col);
    end for;
    return 'SCD Type 2 Implemented successfully for all the tables in input_table';
  end;
$$
;

call SCD_Implementation();
